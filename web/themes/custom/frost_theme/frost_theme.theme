<?php

/**
 * @file
 * Functions to support theming in the frost_theme theme.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Template\Attribute;

// Include the helper function for entities.
require_once 'includes/entity_style_classes.inc';

// Include all template suggestions.
require_once 'includes/hook_theme_suggestions_HOOK_alter.inc';

// Include large preprocess functions.
require_once  'includes/preprocess_field.inc';
require_once  'includes/preprocess_html.inc';
require_once  'includes/preprocess_media.inc';
require_once  'includes/preprocess_node.inc';
require_once  'includes/preprocess_paragraph.inc';
require_once  'includes/preprocess_region.inc';
require_once  'includes/preprocess_taxonomy_term.inc';
require_once  'includes/preprocess_user.inc';
require_once  'includes/preprocess_views.inc';

/**
 * Implements hook_preprocess_element().
 */
function frost_theme_preprocess_facets_item_list(&$vars) {
  $widget = $vars['facet']->get('widget');

  $vars['wrapper_attributes']->addClass('facets-widget');
  $type_class = Html::cleanCssIdentifier('facets-widget-' . $widget['type']);
  $vars['wrapper_attributes']->addClass($type_class);
  $vars['wrapper_attributes']->addClass('position--relative');
  $title_class = Html::cleanCssIdentifier('facets-widget-title--' . strtolower($vars['title']));
  $vars['wrapper_attributes']->addClass($title_class);

  $has_active_class = 'lacks-active-items';
  foreach ($vars['items'] as $key => $value) {
    if ($value['value']['#title']['#is_active'] === TRUE) {
      $vars['items'][$key]['attributes']->addClass('facet-active-item');
      $has_active_class = 'has-active-items';
    }
    elseif ($value['value']['#title']['#value'] === 'Reset') {
      // Do nothing.
    }
    else {
      $vars['items'][$key]['attributes']->addClass('facet-inactive-item');
    }
  }

  $vars['wrapper_attributes']->addClass($has_active_class);
}

/**
 * Implements hook_preprocess_pager().
 */
function frost_theme_preprocess_pager(&$vars) {
  if (isset($vars['items']['previous']['text'])) {
    $vars['items']['previous']['text'] = '‹ Previous';
  }

  if (isset($vars['items']['next']['text'])) {
    $vars['items']['next']['text'] = 'Next ›';
  }
}

/**
 * Implements hook_preprocess_input().
 */
function frost_theme_preprocess_input(&$vars) {
  $vars['button'] = FALSE;

  if (isset($vars['attributes']['type']) && in_array($vars['attributes']['type'], [
    'button',
    'reset',
    'submit',
  ])) {
    $vars['button'] = TRUE;
  }
}

